# Generated by Django 5.2 on 2025-05-02 02:39

import data.validate
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_name', models.CharField(help_text='Укажите название подразделения (максимум 64 символа)', max_length=64, unique=True, verbose_name='Название подразделения')),
                ('base_address', models.CharField(help_text='Полный адрес подразделения', max_length=255, verbose_name='Адрес подразделения')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ['base_name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Введено в эксплуатацию', 'Введено в эксплуатацию'), ('Снято с учёта', 'Снято с учёта')], default='Введено в эксплуатацию', max_length=40, verbose_name='Состояние учёта')),
                ('objects_name', models.CharField(help_text='Наименование инвентарного объекта', max_length=128, verbose_name='Инвентаризационный объект')),
                ('inventory_number', models.CharField(help_text='Введите номер', max_length=12, unique=True, validators=[data.validate.validate_number_int], verbose_name='Инвентаризационный номер')),
                ('value', models.CharField(choices=[('Здания и сооружения', [('101.12.00.00', '101.12 - Нежилые помещения (здания и сооружения) - недвижимое имущество'), ('103.11.00.00', '103.11 - Земля (земельные участки) - недвижимое имущество')]), ('Машины и оборудование (особо ценное)', [('101.22.00.00', '101.22 - Нежилые помещения (здания и сооружения) - особо ценное движимое имущество'), ('101.24.00.00', '101.24 - Машины и оборудование - особо ценное движимое имущество')]), ('Машины и оборудование (иное)', [('101.34.00.00', '101.34 - Машины и оборудование - иное движимое имущество'), ('21.34.00.00', '21.34 - Машины и оборудование - иное движимое имущество')]), ('Инвентарь и хозяйственные принадлежности', [('101.36.00.00', '101.36 - Инвентарь производственный и хозяйственный - иное движимое имущество'), ('21.36.00.00', '21.36 - Инвентарь производственный и хозяйственный - иное движимое имущество')]), ('Прочие основные средства', [('101.38.00.00', '101.38 - Прочие основные средства - иное движимое имущество')]), ('Биологические ресурсы', [('101.27.00.00', '101.27 - Биологические ресурсы - особо ценное движимое имущество')])], help_text='Выберите соответствующий учетный счет актива', max_length=20, verbose_name='Счёт актива')),
                ('office', models.CharField(default='0', help_text='Номер кабинета', max_length=10, verbose_name='Кабинет расположения')),
                ('accountable_user', models.CharField(help_text='ФИО ответственного лица', max_length=255, verbose_name='Ответственный за содержание')),
                ('start_date', models.DateField(blank=True, help_text='Дата постановки на учет', null=True, verbose_name='Дата ввода в эксплуатацию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего изменения')),
                ('description', models.TextField(default='Здесь должно быть описание объекта, позволяющее легко его идентифицировать.\n                    Здесь могут быть его характеристики, цвет, объем, системные данные и т.п.', help_text='Подробное описание объекта', validators=[data.validate.validate_description_length], verbose_name='Описание')),
                ('current_duration', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Срок эксплуатации (дни)')),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_items', to='data.baseinfo', verbose_name='Подразделение')),
            ],
            options={
                'verbose_name': 'Инвентаризационная запись',
                'verbose_name_plural': 'Инвентаризационные записи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QrCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr', models.ImageField(help_text='QR-код инвентарного объекта', upload_to='qr_codes/%Y/%m/%d/', verbose_name='QR-код')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания QR-кода')),
                ('objects_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='qr_code', to='data.inventoryitem', verbose_name='Инвентарный объект')),
            ],
            options={
                'verbose_name': 'QR-код',
                'verbose_name_plural': 'QR-коды',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['inventory_number'], name='data_invent_invento_999d17_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['state'], name='data_invent_state_cabb54_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['base'], name='data_invent_base_id_43f61b_idx'),
        ),
    ]
